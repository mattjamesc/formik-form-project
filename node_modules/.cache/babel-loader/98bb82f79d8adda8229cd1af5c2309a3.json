{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Carter\\\\Desktop\\\\coursework\\\\build-a-formik-form_starter\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\"; // TODO: import useFormik from formik library\n\nimport { useFormik } from \"formik\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  // TODO: add a const called formik assigned to useFormik()\n  const formik = useFormik({\n    initialValues: {\n      email: \"\",\n      password: \"\"\n    },\n    onSubmit: () => {\n      alert(\"Login Successful\");\n    },\n    validate: values => {\n      let errors = {};\n      if (!values.email) errors.email = \"Field Required\";\n      if (values.email && !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) errors.email = \"Username should be an email\";\n      if (!values.password) errors.password = \"Field Required\"; //if() errors.email = 'Username should be an email'\n\n      return errors;\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: formik.handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"email\",\n        id: \"emailField\",\n        type: \"text\",\n        onChange: formik.handleChange,\n        value: formik.values.email\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), formik.errors.email ? /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          color: \"red\"\n        },\n        children: formik.errors.email\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }, this) : null, /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"password\",\n        id: \"pswField\",\n        type: \"text\",\n        onChange: formik.handleChange,\n        value: formik.values.password\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), formik.errors.password ? /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          color: \"red\"\n        },\n        children: formik.errors.password\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this) : null, /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"submitBtn\",\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"B/4rI4IXClQ7sG7psKj+pOuRe5Q=\", false, function () {\n  return [useFormik];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/Carter/Desktop/coursework/build-a-formik-form_starter/src/App.js"],"names":["React","useFormik","App","formik","initialValues","email","password","onSubmit","alert","validate","values","errors","test","handleSubmit","handleChange","color"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;;AACA,SAASC,SAAT,QAA0B,QAA1B;;;AACA,SAASC,GAAT,GAAe;AAAA;;AACb;AACA,QAAMC,MAAM,GAAGF,SAAS,CAAC;AACvBG,IAAAA,aAAa,EAAE;AACbC,MAAAA,KAAK,EAAE,EADM;AAEbC,MAAAA,QAAQ,EAAE;AAFG,KADQ;AAKvBC,IAAAA,QAAQ,EAAE,MAAM;AACdC,MAAAA,KAAK,CAAC,kBAAD,CAAL;AACD,KAPsB;AAQvBC,IAAAA,QAAQ,EAAGC,MAAD,IAAY;AACpB,UAAIC,MAAM,GAAG,EAAb;AACA,UAAI,CAACD,MAAM,CAACL,KAAZ,EAAmBM,MAAM,CAACN,KAAP,GAAe,gBAAf;AACnB,UACEK,MAAM,CAACL,KAAP,IACA,CAAC,4CAA4CO,IAA5C,CAAiDF,MAAM,CAACL,KAAxD,CAFH,EAIEM,MAAM,CAACN,KAAP,GAAe,6BAAf;AACF,UAAI,CAACK,MAAM,CAACJ,QAAZ,EAAsBK,MAAM,CAACL,QAAP,GAAkB,gBAAlB,CARF,CASpB;;AACA,aAAOK,MAAP;AACD;AAnBsB,GAAD,CAAxB;AAsBA,sBACE;AAAA,2BACE;AAAM,MAAA,QAAQ,EAAER,MAAM,CAACU,YAAvB;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AACE,QAAA,IAAI,EAAC,OADP;AAEE,QAAA,EAAE,EAAC,YAFL;AAGE,QAAA,IAAI,EAAC,MAHP;AAIE,QAAA,QAAQ,EAAEV,MAAM,CAACW,YAJnB;AAKE,QAAA,KAAK,EAAEX,MAAM,CAACO,MAAP,CAAcL;AALvB;AAAA;AAAA;AAAA;AAAA,cAFF,EASGF,MAAM,CAACQ,MAAP,CAAcN,KAAd,gBACC;AAAK,QAAA,KAAK,EAAE;AAAEU,UAAAA,KAAK,EAAE;AAAT,SAAZ;AAAA,kBAA+BZ,MAAM,CAACQ,MAAP,CAAcN;AAA7C;AAAA;AAAA;AAAA;AAAA,cADD,GAEG,IAXN,eAYE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAZF,eAaE;AACE,QAAA,IAAI,EAAC,UADP;AAEE,QAAA,EAAE,EAAC,UAFL;AAGE,QAAA,IAAI,EAAC,MAHP;AAIE,QAAA,QAAQ,EAAEF,MAAM,CAACW,YAJnB;AAKE,QAAA,KAAK,EAAEX,MAAM,CAACO,MAAP,CAAcJ;AALvB;AAAA;AAAA;AAAA;AAAA,cAbF,EAoBGH,MAAM,CAACQ,MAAP,CAAcL,QAAd,gBACC;AAAK,QAAA,KAAK,EAAE;AAAES,UAAAA,KAAK,EAAE;AAAT,SAAZ;AAAA,kBAA+BZ,MAAM,CAACQ,MAAP,CAAcL;AAA7C;AAAA;AAAA;AAAA;AAAA,cADD,GAEG,IAtBN,eAuBE;AAAQ,QAAA,EAAE,EAAC,WAAX;AAAuB,QAAA,IAAI,EAAC,QAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAvBF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AA+BD;;GAvDQJ,G;UAEQD,S;;;KAFRC,G;AAyDT,eAAeA,GAAf","sourcesContent":["import React from \"react\";\n// TODO: import useFormik from formik library\nimport { useFormik } from \"formik\";\nfunction App() {\n  // TODO: add a const called formik assigned to useFormik()\n  const formik = useFormik({\n    initialValues: {\n      email: \"\",\n      password: \"\",\n    },\n    onSubmit: () => {\n      alert(\"Login Successful\");\n    },\n    validate: (values) => {\n      let errors = {};\n      if (!values.email) errors.email = \"Field Required\";\n      if (\n        values.email &&\n        !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)\n      )\n        errors.email = \"Username should be an email\";\n      if (!values.password) errors.password = \"Field Required\";\n      //if() errors.email = 'Username should be an email'\n      return errors;\n    },\n  });\n\n  return (\n    <div>\n      <form onSubmit={formik.handleSubmit}>\n        <div>Email</div>\n        <input\n          name=\"email\"\n          id=\"emailField\"\n          type=\"text\"\n          onChange={formik.handleChange}\n          value={formik.values.email}\n        />\n        {formik.errors.email ? (\n          <div style={{ color: \"red\" }}>{formik.errors.email}</div>\n        ) : null}\n        <div>Password</div>\n        <input\n          name=\"password\"\n          id=\"pswField\"\n          type=\"text\"\n          onChange={formik.handleChange}\n          value={formik.values.password}\n        />\n        {formik.errors.password ? (\n          <div style={{ color: \"red\" }}>{formik.errors.password}</div>\n        ) : null}\n        <button id=\"submitBtn\" type=\"submit\">\n          Submit\n        </button>\n      </form>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}